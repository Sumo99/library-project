import scrapy                                                                                                                                                                                                      from scrapy.crawler import CrawlerProcess                                                                                                                                                                          import requests                                                                                                                                                                                                    from lxml import html                                                                                                                                                                                              from lxml import etree                                                                                                                                                                                             import itertools                                                                                                                                                                                                   import math                                                                                                                                                                                                        import json                                                                                                                                                                                                        from sqlalchemy import *                                                                                                                                                                                           import mathclass LibrarySpider(scrapy.Spider):                                                                                                                                                                                    name = 'library'                                                                                                                                                                                                                                                                                                                                                                                                                      db_connection = "mysql+pymysql://library:pass@localhost/library"                                                                                                                                                   engine = create_engine(db_connection, echo=True)                                                                                                                                                                   meta = MetaData()                                                                                                                                                                                                                                                                                                                                                                                                                     books = Table('books', meta,                                                                                                                                                                                                     Column('book_num', Integer, primary_key=True),                                                                                                                                                                     Column('title', String(50), nullable=False),                                                                                                                                                                       Column('cover', String(60)),                                                                                                                                                                                       Column('author', String(50), nullable=False),                                                                                                                                                                      Column('description', String(600000)),                                                                                                                                                                             Column('collection', String(60)),                                                                                                                                                                                  Column('link', String(60)),                                                                                                                                                                                        Column('isbn', String(60)),                                                                                                                                                                                        Column('county', String(60)),                                                                                                                                                                                      Column('county2', String(60)),                                                                                                                                                                                     Column('location', String(60)),                                                                                                                                                                                    Column('rating', Float),                                                                                                                                                                                           Column('num_ratings', Integermeta.create_all(engine)                                                                                                                                                                                                                                                                                                                                                                                                               def start_requests(self):                                                                                                                                                                                              page = requests.get(                                                                                                                                                                                                   "https://hclib.bibliocommons.com/v2/search?custom_edit=true&query=isolanguage%3A%22eng%22%20formatcode%3A(BK)&searchType=bl&f_STATUS=_anywhere_&f_AUDIENCE=adult")                                             page_tree = html.fromstring(page.content)                                                                                                                                                                                                                                                                                                                                                                                             books = page_tree.xpath(                                                                                                                                                                                               "/html/body/div/div/div/div[5]/div/div/div/div[2]/div[2]/section/section[1]/div[2]/span")[0].text                                                                                                              num_books = books[11:18].replace(",","")                                                                                                                                                                                                                                                                                                                                                                                              for i in range(1, math.ceil(int(num_books) / 5)):                                                                                                                                                                      yield scrapy.Request(url=f"https://hclib.bibliocommons.com/v2/search?custom_edit=false&query=isolanguage%3A%22eng%22%20formatcode%3A(BK%20OR%20AB%20)&searchType=bl&f_FORMAT=BK&f_STATUS=_anywhere_&f_AUDIENCE=adult&pagination_page={i}", callback=self.check_available)                                                                                                                                                                                                                                                                                                                                                                        def check_available(self, response):                                                                                                                                                                                                                                                                                                                                                                                                      for book in response.css("[data-key='search-result-item']"):                                                                                                                                                           book_status = book.css(".cp-physical-availability-block")                                                                                                                                                          book_link = book.css("[data-key='bib-title']::attr(href)").get()                                                                                                                                                   book_available = "Available" in book_status.get()                                                                                                                                                                  book_type = book.css(".cp-call-number").xpath("text()").get()                                                                                                                                                                                                                                                                                                                                                                         if (book_available and "Children" not in book_type and "Easy" not in book_type and "but not" not in book_status.get()):                                                                                                print("Scraping book information")                                                                                                                                                                                 yield scrapy.Request(url="https://hclib.bibliocommons.com"+str(book_link), cb_kwargs=dict(collection=book_type))                                                                                                                                                                                                                                                                                                          def parse(self, response, collection):                                                                                                                                                                                                                                                                                                                                                                                                    num_rating = 0                                                                                                                                                                                                     book_rating = 0                                                                                                                                                                                                    isbn = response.css(".jacketCover").xpath("@src").get()[45:58]                                                                                                                                                     book = requests.get(f"https://www.googleapis.com/books/v1/volumes?q=+isbn:{isbn}")                                                                                                                                                                                                                                                                                                                                                    try:                                                                                                                                                                                                                   book_info = book.json()                                                                                                                                                                                            book_num = book_info["items"][0]['volumeInfo']['ratingsCount']                                                                                                                                                     book_rating = book_info["items"][0]['volumeInfo']['averageRating']                                                                                                                                                 book_rating = book_rating - 1/math.sqrt(book_num)                                                                                                                                                              except KeyError:                                                                                                                                                                                                       book_rating = 3                                                                                                                                                                                                    book_num = 0                                                                                                                                                                                                                                                                                                                                                                                                                      ins = self.books.insert().values(cover=response.css(".jacketCover").xpath("@src").get(), title=response.css(".item_bib_title").xpath("text()").get().strip(),                                                                                       author=response.xpath("/html/body/div[2]/div[2]/div/div/div[3]/div/div[2]/div[1]/div/div[1]/div[2]/div[1]/h2/a").xpath("text()").get().strip(), description=response.css(".bib_description").xpath("text()").get().strip(),                                                                                                                                                                                                           collection=collection, isbn=response.css(".jacketCover").xpath("@src").get()[45:58], link=response.request.url, county="Hennepin", rating=book_rating, num_ratings=book_num)                                                                                                                                                                                                                                                                                                                                                                                                                                            conn = self.engine.connect()                                                                                                                                                                                       result = conn.execute(ins)                                                                                                                                                                                                                                                                                                                                                                                                            return{                                                                                                                                                                                                                "Cover": response.css(".jacketCover").xpath("@src").get(),                                                                                                                                                         "Title": response.css(".item_bib_title").xpath("text()").get().strip(),                                                                                                                                            "Author": response.xpath("/html/body/div[2]/div[2]/div/div/div[3]/div/div[2]/div[1]/div/div[1]/div[2]/div[1]/h2/a").xpath("text()").get().strip(),                                                                 "Description": response.css(".bib_description").xpath("text()").get().strip(),                                                                                                                                     "Collection": collection,                                                                                                                                                                                          "Link": response.request.url,                                                                                                                                                                                      "ISBN": response.css(".jacketCover").xpath("@src").get()[45:58]                                                                                                                                                }process = CrawlerProcess({                                                                                                                                                                                             'USER_AGENT': 'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1)'                                                                                                                                             })                                                                                                                                                                                                                 process.crawl(LibrarySpider)                                                                                                                                                                                       process.start()   
